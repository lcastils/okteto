# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: master
  pull_request:
    branches: master

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Maven Verify
      run: mvn -B clean verify -Pintegration-test
  build-and-push-image:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Build container image
      uses: docker/build-push-action@v1
      with:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: docker.pkg.github.com
        repository: ${{ github.repository }}/okteto-image
        tag_with_sha: true
        tag_with_ref: true
        tags: ${{github.sha}}
  k8s:
    name: publish to okteto
    runs-on: ubuntu-latest
    needs: [build-and-push-image]
    steps:
    - name: checkout
      uses: actions/checkout@master
    - uses: okteto/login@master
      with:
        token: ${{ secrets.OKTETO_TOKEN }}
    - name: "Activate personal namespace"
      uses: okteto/namespace@master
      with:
        namespace: lcastils
    - name: "Create deployment"
      uses: okteto/apply@lcastils
      with:
        manifest: deployment.yaml
